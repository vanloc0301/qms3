<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>