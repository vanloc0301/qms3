//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4927
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QMS3 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private Station_TableDataTable tableStation_Table;
        
        private Goods_TableDataTable tableGoods_Table;
        
        private ResultDataTable tableResult;
        
        private MyDateDataTable tableMyDate;
        
        private Result_t1DataTable tableResult_t1;
        
        private Result_t2DataTable tableResult_t2;
        
        private Result_t3DataTable tableResult_t3;
        
        private Temp_ResultDataTable tableTemp_Result;
        
        private Result_t0DataTable tableResult_t0;
        
        private MonCheCiDataTable tableMonCheCi;
        
        private global::System.Data.DataRelation relationStation_Table_Goods_Table;
        
        private global::System.Data.DataRelation relationMyDate_Result;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Station_Table"] != null)) {
                    base.Tables.Add(new Station_TableDataTable(ds.Tables["Station_Table"]));
                }
                if ((ds.Tables["Goods_Table"] != null)) {
                    base.Tables.Add(new Goods_TableDataTable(ds.Tables["Goods_Table"]));
                }
                if ((ds.Tables["Result"] != null)) {
                    base.Tables.Add(new ResultDataTable(ds.Tables["Result"]));
                }
                if ((ds.Tables["MyDate"] != null)) {
                    base.Tables.Add(new MyDateDataTable(ds.Tables["MyDate"]));
                }
                if ((ds.Tables["Result_t1"] != null)) {
                    base.Tables.Add(new Result_t1DataTable(ds.Tables["Result_t1"]));
                }
                if ((ds.Tables["Result_t2"] != null)) {
                    base.Tables.Add(new Result_t2DataTable(ds.Tables["Result_t2"]));
                }
                if ((ds.Tables["Result_t3"] != null)) {
                    base.Tables.Add(new Result_t3DataTable(ds.Tables["Result_t3"]));
                }
                if ((ds.Tables["Temp_Result"] != null)) {
                    base.Tables.Add(new Temp_ResultDataTable(ds.Tables["Temp_Result"]));
                }
                if ((ds.Tables["Result_t0"] != null)) {
                    base.Tables.Add(new Result_t0DataTable(ds.Tables["Result_t0"]));
                }
                if ((ds.Tables["MonCheCi"] != null)) {
                    base.Tables.Add(new MonCheCiDataTable(ds.Tables["MonCheCi"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Station_TableDataTable Station_Table {
            get {
                return this.tableStation_Table;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Goods_TableDataTable Goods_Table {
            get {
                return this.tableGoods_Table;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ResultDataTable Result {
            get {
                return this.tableResult;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MyDateDataTable MyDate {
            get {
                return this.tableMyDate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Result_t1DataTable Result_t1 {
            get {
                return this.tableResult_t1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Result_t2DataTable Result_t2 {
            get {
                return this.tableResult_t2;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Result_t3DataTable Result_t3 {
            get {
                return this.tableResult_t3;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Temp_ResultDataTable Temp_Result {
            get {
                return this.tableTemp_Result;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Result_t0DataTable Result_t0 {
            get {
                return this.tableResult_t0;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MonCheCiDataTable MonCheCi {
            get {
                return this.tableMonCheCi;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Station_Table"] != null)) {
                    base.Tables.Add(new Station_TableDataTable(ds.Tables["Station_Table"]));
                }
                if ((ds.Tables["Goods_Table"] != null)) {
                    base.Tables.Add(new Goods_TableDataTable(ds.Tables["Goods_Table"]));
                }
                if ((ds.Tables["Result"] != null)) {
                    base.Tables.Add(new ResultDataTable(ds.Tables["Result"]));
                }
                if ((ds.Tables["MyDate"] != null)) {
                    base.Tables.Add(new MyDateDataTable(ds.Tables["MyDate"]));
                }
                if ((ds.Tables["Result_t1"] != null)) {
                    base.Tables.Add(new Result_t1DataTable(ds.Tables["Result_t1"]));
                }
                if ((ds.Tables["Result_t2"] != null)) {
                    base.Tables.Add(new Result_t2DataTable(ds.Tables["Result_t2"]));
                }
                if ((ds.Tables["Result_t3"] != null)) {
                    base.Tables.Add(new Result_t3DataTable(ds.Tables["Result_t3"]));
                }
                if ((ds.Tables["Temp_Result"] != null)) {
                    base.Tables.Add(new Temp_ResultDataTable(ds.Tables["Temp_Result"]));
                }
                if ((ds.Tables["Result_t0"] != null)) {
                    base.Tables.Add(new Result_t0DataTable(ds.Tables["Result_t0"]));
                }
                if ((ds.Tables["MonCheCi"] != null)) {
                    base.Tables.Add(new MonCheCiDataTable(ds.Tables["MonCheCi"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableStation_Table = ((Station_TableDataTable)(base.Tables["Station_Table"]));
            if ((initTable == true)) {
                if ((this.tableStation_Table != null)) {
                    this.tableStation_Table.InitVars();
                }
            }
            this.tableGoods_Table = ((Goods_TableDataTable)(base.Tables["Goods_Table"]));
            if ((initTable == true)) {
                if ((this.tableGoods_Table != null)) {
                    this.tableGoods_Table.InitVars();
                }
            }
            this.tableResult = ((ResultDataTable)(base.Tables["Result"]));
            if ((initTable == true)) {
                if ((this.tableResult != null)) {
                    this.tableResult.InitVars();
                }
            }
            this.tableMyDate = ((MyDateDataTable)(base.Tables["MyDate"]));
            if ((initTable == true)) {
                if ((this.tableMyDate != null)) {
                    this.tableMyDate.InitVars();
                }
            }
            this.tableResult_t1 = ((Result_t1DataTable)(base.Tables["Result_t1"]));
            if ((initTable == true)) {
                if ((this.tableResult_t1 != null)) {
                    this.tableResult_t1.InitVars();
                }
            }
            this.tableResult_t2 = ((Result_t2DataTable)(base.Tables["Result_t2"]));
            if ((initTable == true)) {
                if ((this.tableResult_t2 != null)) {
                    this.tableResult_t2.InitVars();
                }
            }
            this.tableResult_t3 = ((Result_t3DataTable)(base.Tables["Result_t3"]));
            if ((initTable == true)) {
                if ((this.tableResult_t3 != null)) {
                    this.tableResult_t3.InitVars();
                }
            }
            this.tableTemp_Result = ((Temp_ResultDataTable)(base.Tables["Temp_Result"]));
            if ((initTable == true)) {
                if ((this.tableTemp_Result != null)) {
                    this.tableTemp_Result.InitVars();
                }
            }
            this.tableResult_t0 = ((Result_t0DataTable)(base.Tables["Result_t0"]));
            if ((initTable == true)) {
                if ((this.tableResult_t0 != null)) {
                    this.tableResult_t0.InitVars();
                }
            }
            this.tableMonCheCi = ((MonCheCiDataTable)(base.Tables["MonCheCi"]));
            if ((initTable == true)) {
                if ((this.tableMonCheCi != null)) {
                    this.tableMonCheCi.InitVars();
                }
            }
            this.relationStation_Table_Goods_Table = this.Relations["Station_Table_Goods_Table"];
            this.relationMyDate_Result = this.Relations["MyDate_Result"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStation_Table = new Station_TableDataTable();
            base.Tables.Add(this.tableStation_Table);
            this.tableGoods_Table = new Goods_TableDataTable();
            base.Tables.Add(this.tableGoods_Table);
            this.tableResult = new ResultDataTable();
            base.Tables.Add(this.tableResult);
            this.tableMyDate = new MyDateDataTable();
            base.Tables.Add(this.tableMyDate);
            this.tableResult_t1 = new Result_t1DataTable();
            base.Tables.Add(this.tableResult_t1);
            this.tableResult_t2 = new Result_t2DataTable();
            base.Tables.Add(this.tableResult_t2);
            this.tableResult_t3 = new Result_t3DataTable();
            base.Tables.Add(this.tableResult_t3);
            this.tableTemp_Result = new Temp_ResultDataTable();
            base.Tables.Add(this.tableTemp_Result);
            this.tableResult_t0 = new Result_t0DataTable();
            base.Tables.Add(this.tableResult_t0);
            this.tableMonCheCi = new MonCheCiDataTable();
            base.Tables.Add(this.tableMonCheCi);
            this.relationStation_Table_Goods_Table = new global::System.Data.DataRelation("Station_Table_Goods_Table", new global::System.Data.DataColumn[] {
                        this.tableStation_Table.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableGoods_Table.IDColumn}, false);
            this.Relations.Add(this.relationStation_Table_Goods_Table);
            this.relationMyDate_Result = new global::System.Data.DataRelation("MyDate_Result", new global::System.Data.DataColumn[] {
                        this.tableMyDate.DateIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableResult.DateIDColumn}, false);
            this.Relations.Add(this.relationMyDate_Result);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStation_Table() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGoods_Table() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeResult() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMyDate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeResult_t1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeResult_t2() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeResult_t3() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTemp_Result() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeResult_t0() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMonCheCi() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Station_TableRowChangeEventHandler(object sender, Station_TableRowChangeEvent e);
        
        public delegate void Goods_TableRowChangeEventHandler(object sender, Goods_TableRowChangeEvent e);
        
        public delegate void ResultRowChangeEventHandler(object sender, ResultRowChangeEvent e);
        
        public delegate void MyDateRowChangeEventHandler(object sender, MyDateRowChangeEvent e);
        
        public delegate void Result_t1RowChangeEventHandler(object sender, Result_t1RowChangeEvent e);
        
        public delegate void Result_t2RowChangeEventHandler(object sender, Result_t2RowChangeEvent e);
        
        public delegate void Result_t3RowChangeEventHandler(object sender, Result_t3RowChangeEvent e);
        
        public delegate void Temp_ResultRowChangeEventHandler(object sender, Temp_ResultRowChangeEvent e);
        
        public delegate void Result_t0RowChangeEventHandler(object sender, Result_t0RowChangeEvent e);
        
        public delegate void MonCheCiRowChangeEventHandler(object sender, MonCheCiRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Station_TableDataTable : global::System.Data.TypedTableBase<Station_TableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnStationID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Station_TableDataTable() {
                this.TableName = "Station_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Station_TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Station_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationIDColumn {
                get {
                    return this.columnStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn {
                get {
                    return this.columnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Station_TableRow this[int index] {
                get {
                    return ((Station_TableRow)(this.Rows[index]));
                }
            }
            
            public event Station_TableRowChangeEventHandler Station_TableRowChanging;
            
            public event Station_TableRowChangeEventHandler Station_TableRowChanged;
            
            public event Station_TableRowChangeEventHandler Station_TableRowDeleting;
            
            public event Station_TableRowChangeEventHandler Station_TableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStation_TableRow(Station_TableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Station_TableRow AddStation_TableRow(int ID, int StationID, string Name, int Class) {
                Station_TableRow rowStation_TableRow = ((Station_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        StationID,
                        Name,
                        Class};
                rowStation_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStation_TableRow);
                return rowStation_TableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Station_TableRow FindByID(int ID) {
                return ((Station_TableRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Station_TableDataTable cln = ((Station_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Station_TableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnStationID = base.Columns["StationID"];
                this.columnName = base.Columns["Name"];
                this.columnClass = base.Columns["Class"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnStationID = new global::System.Data.DataColumn("StationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Station_TableKey1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Station_TableRow NewStation_TableRow() {
                return ((Station_TableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Station_TableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Station_TableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Station_TableRowChanged != null)) {
                    this.Station_TableRowChanged(this, new Station_TableRowChangeEvent(((Station_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Station_TableRowChanging != null)) {
                    this.Station_TableRowChanging(this, new Station_TableRowChangeEvent(((Station_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Station_TableRowDeleted != null)) {
                    this.Station_TableRowDeleted(this, new Station_TableRowChangeEvent(((Station_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Station_TableRowDeleting != null)) {
                    this.Station_TableRowDeleting(this, new Station_TableRowChangeEvent(((Station_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStation_TableRow(Station_TableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Station_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Goods_TableDataTable : global::System.Data.TypedTableBase<Goods_TableRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnBoxCardID;
            
            private global::System.Data.DataColumn columnTruckNo;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnStartStationID;
            
            private global::System.Data.DataColumn columnEndStationID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Goods_TableDataTable() {
                this.TableName = "Goods_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Goods_TableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Goods_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BoxCardIDColumn {
                get {
                    return this.columnBoxCardID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TruckNoColumn {
                get {
                    return this.columnTruckNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartStationIDColumn {
                get {
                    return this.columnStartStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndStationIDColumn {
                get {
                    return this.columnEndStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Goods_TableRow this[int index] {
                get {
                    return ((Goods_TableRow)(this.Rows[index]));
                }
            }
            
            public event Goods_TableRowChangeEventHandler Goods_TableRowChanging;
            
            public event Goods_TableRowChangeEventHandler Goods_TableRowChanged;
            
            public event Goods_TableRowChangeEventHandler Goods_TableRowDeleting;
            
            public event Goods_TableRowChangeEventHandler Goods_TableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGoods_TableRow(Goods_TableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Goods_TableRow AddGoods_TableRow(Station_TableRow parentStation_TableRowByStation_Table_Goods_Table, string BoxCardID, string TruckNo, string StartTime, string EndTime, int State, double Weight, int StartStationID, int EndStationID) {
                Goods_TableRow rowGoods_TableRow = ((Goods_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        BoxCardID,
                        TruckNo,
                        StartTime,
                        EndTime,
                        State,
                        Weight,
                        StartStationID,
                        EndStationID};
                if ((parentStation_TableRowByStation_Table_Goods_Table != null)) {
                    columnValuesArray[0] = parentStation_TableRowByStation_Table_Goods_Table[0];
                }
                rowGoods_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGoods_TableRow);
                return rowGoods_TableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Goods_TableRow FindByID(int ID) {
                return ((Goods_TableRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Goods_TableDataTable cln = ((Goods_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Goods_TableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnBoxCardID = base.Columns["BoxCardID"];
                this.columnTruckNo = base.Columns["TruckNo"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnState = base.Columns["State"];
                this.columnWeight = base.Columns["Weight"];
                this.columnStartStationID = base.Columns["StartStationID"];
                this.columnEndStationID = base.Columns["EndStationID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnBoxCardID = new global::System.Data.DataColumn("BoxCardID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBoxCardID);
                this.columnTruckNo = new global::System.Data.DataColumn("TruckNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTruckNo);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnState = new global::System.Data.DataColumn("State", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnStartStationID = new global::System.Data.DataColumn("StartStationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartStationID);
                this.columnEndStationID = new global::System.Data.DataColumn("EndStationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndStationID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Goods_TableKey1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Goods_TableRow NewGoods_TableRow() {
                return ((Goods_TableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Goods_TableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Goods_TableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Goods_TableRowChanged != null)) {
                    this.Goods_TableRowChanged(this, new Goods_TableRowChangeEvent(((Goods_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Goods_TableRowChanging != null)) {
                    this.Goods_TableRowChanging(this, new Goods_TableRowChangeEvent(((Goods_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Goods_TableRowDeleted != null)) {
                    this.Goods_TableRowDeleted(this, new Goods_TableRowChangeEvent(((Goods_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Goods_TableRowDeleting != null)) {
                    this.Goods_TableRowDeleting(this, new Goods_TableRowChangeEvent(((Goods_TableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGoods_TableRow(Goods_TableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Goods_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ResultDataTable : global::System.Data.TypedTableBase<ResultRow> {
            
            private global::System.Data.DataColumn columnStaName;
            
            private global::System.Data.DataColumn columnSumBox;
            
            private global::System.Data.DataColumn columnWeight_2;
            
            private global::System.Data.DataColumn columnWeight_3;
            
            private global::System.Data.DataColumn columnWeight_4;
            
            private global::System.Data.DataColumn columnWeight_5;
            
            private global::System.Data.DataColumn columnWeight_6;
            
            private global::System.Data.DataColumn columnWeight_7;
            
            private global::System.Data.DataColumn columnWeight_8;
            
            private global::System.Data.DataColumn columnWeight_9;
            
            private global::System.Data.DataColumn columnWeight_10;
            
            private global::System.Data.DataColumn columnWeight_11;
            
            private global::System.Data.DataColumn columnWeight_12;
            
            private global::System.Data.DataColumn columnWeight_13;
            
            private global::System.Data.DataColumn columnWeight_14;
            
            private global::System.Data.DataColumn columnWeight_15;
            
            private global::System.Data.DataColumn columnSumWeight;
            
            private global::System.Data.DataColumn columnSumBoxTail;
            
            private global::System.Data.DataColumn columnDateID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultDataTable() {
                this.TableName = "Result";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaNameColumn {
                get {
                    return this.columnStaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumBoxColumn {
                get {
                    return this.columnSumBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_2Column {
                get {
                    return this.columnWeight_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_3Column {
                get {
                    return this.columnWeight_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_4Column {
                get {
                    return this.columnWeight_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_5Column {
                get {
                    return this.columnWeight_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_6Column {
                get {
                    return this.columnWeight_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_7Column {
                get {
                    return this.columnWeight_7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_8Column {
                get {
                    return this.columnWeight_8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_9Column {
                get {
                    return this.columnWeight_9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_10Column {
                get {
                    return this.columnWeight_10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_11Column {
                get {
                    return this.columnWeight_11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_12Column {
                get {
                    return this.columnWeight_12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_13Column {
                get {
                    return this.columnWeight_13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_14Column {
                get {
                    return this.columnWeight_14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Weight_15Column {
                get {
                    return this.columnWeight_15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumWeightColumn {
                get {
                    return this.columnSumWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumBoxTailColumn {
                get {
                    return this.columnSumBoxTail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateIDColumn {
                get {
                    return this.columnDateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultRow this[int index] {
                get {
                    return ((ResultRow)(this.Rows[index]));
                }
            }
            
            public event ResultRowChangeEventHandler ResultRowChanging;
            
            public event ResultRowChangeEventHandler ResultRowChanged;
            
            public event ResultRowChangeEventHandler ResultRowDeleting;
            
            public event ResultRowChangeEventHandler ResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddResultRow(ResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultRow AddResultRow(
                        string StaName, 
                        int SumBox, 
                        double Weight_2, 
                        double Weight_3, 
                        double Weight_4, 
                        double Weight_5, 
                        double Weight_6, 
                        double Weight_7, 
                        decimal Weight_8, 
                        double Weight_9, 
                        double Weight_10, 
                        double Weight_11, 
                        double Weight_12, 
                        double Weight_13, 
                        double Weight_14, 
                        double Weight_15, 
                        double SumWeight, 
                        int SumBoxTail, 
                        MyDateRow parentMyDateRowByMyDate_Result) {
                ResultRow rowResultRow = ((ResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaName,
                        SumBox,
                        Weight_2,
                        Weight_3,
                        Weight_4,
                        Weight_5,
                        Weight_6,
                        Weight_7,
                        Weight_8,
                        Weight_9,
                        Weight_10,
                        Weight_11,
                        Weight_12,
                        Weight_13,
                        Weight_14,
                        Weight_15,
                        SumWeight,
                        SumBoxTail,
                        null};
                if ((parentMyDateRowByMyDate_Result != null)) {
                    columnValuesArray[18] = parentMyDateRowByMyDate_Result[3];
                }
                rowResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowResultRow);
                return rowResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ResultDataTable cln = ((ResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaName = base.Columns["StaName"];
                this.columnSumBox = base.Columns["SumBox"];
                this.columnWeight_2 = base.Columns["Weight_2"];
                this.columnWeight_3 = base.Columns["Weight_3"];
                this.columnWeight_4 = base.Columns["Weight_4"];
                this.columnWeight_5 = base.Columns["Weight_5"];
                this.columnWeight_6 = base.Columns["Weight_6"];
                this.columnWeight_7 = base.Columns["Weight_7"];
                this.columnWeight_8 = base.Columns["Weight_8"];
                this.columnWeight_9 = base.Columns["Weight_9"];
                this.columnWeight_10 = base.Columns["Weight_10"];
                this.columnWeight_11 = base.Columns["Weight_11"];
                this.columnWeight_12 = base.Columns["Weight_12"];
                this.columnWeight_13 = base.Columns["Weight_13"];
                this.columnWeight_14 = base.Columns["Weight_14"];
                this.columnWeight_15 = base.Columns["Weight_15"];
                this.columnSumWeight = base.Columns["SumWeight"];
                this.columnSumBoxTail = base.Columns["SumBoxTail"];
                this.columnDateID = base.Columns["DateID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaName = new global::System.Data.DataColumn("StaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaName);
                this.columnSumBox = new global::System.Data.DataColumn("SumBox", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumBox);
                this.columnWeight_2 = new global::System.Data.DataColumn("Weight_2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_2);
                this.columnWeight_3 = new global::System.Data.DataColumn("Weight_3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_3);
                this.columnWeight_4 = new global::System.Data.DataColumn("Weight_4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_4);
                this.columnWeight_5 = new global::System.Data.DataColumn("Weight_5", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_5);
                this.columnWeight_6 = new global::System.Data.DataColumn("Weight_6", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_6);
                this.columnWeight_7 = new global::System.Data.DataColumn("Weight_7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_7);
                this.columnWeight_8 = new global::System.Data.DataColumn("Weight_8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_8);
                this.columnWeight_9 = new global::System.Data.DataColumn("Weight_9", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_9);
                this.columnWeight_10 = new global::System.Data.DataColumn("Weight_10", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_10);
                this.columnWeight_11 = new global::System.Data.DataColumn("Weight_11", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_11);
                this.columnWeight_12 = new global::System.Data.DataColumn("Weight_12", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_12);
                this.columnWeight_13 = new global::System.Data.DataColumn("Weight_13", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_13);
                this.columnWeight_14 = new global::System.Data.DataColumn("Weight_14", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_14);
                this.columnWeight_15 = new global::System.Data.DataColumn("Weight_15", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight_15);
                this.columnSumWeight = new global::System.Data.DataColumn("SumWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumWeight);
                this.columnSumBoxTail = new global::System.Data.DataColumn("SumBoxTail", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumBoxTail);
                this.columnDateID = new global::System.Data.DataColumn("DateID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultRow NewResultRow() {
                return ((ResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ResultRowChanged != null)) {
                    this.ResultRowChanged(this, new ResultRowChangeEvent(((ResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ResultRowChanging != null)) {
                    this.ResultRowChanging(this, new ResultRowChangeEvent(((ResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ResultRowDeleted != null)) {
                    this.ResultRowDeleted(this, new ResultRowChangeEvent(((ResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ResultRowDeleting != null)) {
                    this.ResultRowDeleting(this, new ResultRowChangeEvent(((ResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveResultRow(ResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MyDateDataTable : global::System.Data.TypedTableBase<MyDateRow> {
            
            private global::System.Data.DataColumn columnYear;
            
            private global::System.Data.DataColumn columnMonth;
            
            private global::System.Data.DataColumn columnDay;
            
            private global::System.Data.DataColumn columnDateID;
            
            private global::System.Data.DataColumn columnTotalBox;
            
            private global::System.Data.DataColumn columnTotalWeight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MyDateDataTable() {
                this.TableName = "MyDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MyDateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MyDateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YearColumn {
                get {
                    return this.columnYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MonthColumn {
                get {
                    return this.columnMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DayColumn {
                get {
                    return this.columnDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateIDColumn {
                get {
                    return this.columnDateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalBoxColumn {
                get {
                    return this.columnTotalBox;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalWeightColumn {
                get {
                    return this.columnTotalWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MyDateRow this[int index] {
                get {
                    return ((MyDateRow)(this.Rows[index]));
                }
            }
            
            public event MyDateRowChangeEventHandler MyDateRowChanging;
            
            public event MyDateRowChangeEventHandler MyDateRowChanged;
            
            public event MyDateRowChangeEventHandler MyDateRowDeleting;
            
            public event MyDateRowChangeEventHandler MyDateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMyDateRow(MyDateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MyDateRow AddMyDateRow(string Year, string Month, string Day, string DateID, int TotalBox, double TotalWeight) {
                MyDateRow rowMyDateRow = ((MyDateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Year,
                        Month,
                        Day,
                        DateID,
                        TotalBox,
                        TotalWeight};
                rowMyDateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMyDateRow);
                return rowMyDateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MyDateDataTable cln = ((MyDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MyDateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnYear = base.Columns["Year"];
                this.columnMonth = base.Columns["Month"];
                this.columnDay = base.Columns["Day"];
                this.columnDateID = base.Columns["DateID"];
                this.columnTotalBox = base.Columns["TotalBox"];
                this.columnTotalWeight = base.Columns["TotalWeight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnYear = new global::System.Data.DataColumn("Year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYear);
                this.columnMonth = new global::System.Data.DataColumn("Month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonth);
                this.columnDay = new global::System.Data.DataColumn("Day", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay);
                this.columnDateID = new global::System.Data.DataColumn("DateID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateID);
                this.columnTotalBox = new global::System.Data.DataColumn("TotalBox", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalBox);
                this.columnTotalWeight = new global::System.Data.DataColumn("TotalWeight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWeight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("MyDateKey1", new global::System.Data.DataColumn[] {
                                this.columnDateID}, false));
                this.columnDateID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MyDateRow NewMyDateRow() {
                return ((MyDateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MyDateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MyDateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MyDateRowChanged != null)) {
                    this.MyDateRowChanged(this, new MyDateRowChangeEvent(((MyDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MyDateRowChanging != null)) {
                    this.MyDateRowChanging(this, new MyDateRowChangeEvent(((MyDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MyDateRowDeleted != null)) {
                    this.MyDateRowDeleted(this, new MyDateRowChangeEvent(((MyDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MyDateRowDeleting != null)) {
                    this.MyDateRowDeleting(this, new MyDateRowChangeEvent(((MyDateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMyDateRow(MyDateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MyDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Result_t1DataTable : global::System.Data.TypedTableBase<Result_t1Row> {
            
            private global::System.Data.DataColumn columnStaName1;
            
            private global::System.Data.DataColumn columnSumBox1;
            
            private global::System.Data.DataColumn columnSumWeight1;
            
            private global::System.Data.DataColumn columnAveWeight1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t1DataTable() {
                this.TableName = "Result_t1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Result_t1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Result_t1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaName1Column {
                get {
                    return this.columnStaName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumBox1Column {
                get {
                    return this.columnSumBox1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumWeight1Column {
                get {
                    return this.columnSumWeight1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AveWeight1Column {
                get {
                    return this.columnAveWeight1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t1Row this[int index] {
                get {
                    return ((Result_t1Row)(this.Rows[index]));
                }
            }
            
            public event Result_t1RowChangeEventHandler Result_t1RowChanging;
            
            public event Result_t1RowChangeEventHandler Result_t1RowChanged;
            
            public event Result_t1RowChangeEventHandler Result_t1RowDeleting;
            
            public event Result_t1RowChangeEventHandler Result_t1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddResult_t1Row(Result_t1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t1Row AddResult_t1Row(string StaName1, int SumBox1, double SumWeight1, double AveWeight1) {
                Result_t1Row rowResult_t1Row = ((Result_t1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaName1,
                        SumBox1,
                        SumWeight1,
                        AveWeight1};
                rowResult_t1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowResult_t1Row);
                return rowResult_t1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Result_t1DataTable cln = ((Result_t1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Result_t1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaName1 = base.Columns["StaName1"];
                this.columnSumBox1 = base.Columns["SumBox1"];
                this.columnSumWeight1 = base.Columns["SumWeight1"];
                this.columnAveWeight1 = base.Columns["AveWeight1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaName1 = new global::System.Data.DataColumn("StaName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaName1);
                this.columnSumBox1 = new global::System.Data.DataColumn("SumBox1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumBox1);
                this.columnSumWeight1 = new global::System.Data.DataColumn("SumWeight1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumWeight1);
                this.columnAveWeight1 = new global::System.Data.DataColumn("AveWeight1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveWeight1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t1Row NewResult_t1Row() {
                return ((Result_t1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Result_t1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Result_t1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Result_t1RowChanged != null)) {
                    this.Result_t1RowChanged(this, new Result_t1RowChangeEvent(((Result_t1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Result_t1RowChanging != null)) {
                    this.Result_t1RowChanging(this, new Result_t1RowChangeEvent(((Result_t1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Result_t1RowDeleted != null)) {
                    this.Result_t1RowDeleted(this, new Result_t1RowChangeEvent(((Result_t1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Result_t1RowDeleting != null)) {
                    this.Result_t1RowDeleting(this, new Result_t1RowChangeEvent(((Result_t1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveResult_t1Row(Result_t1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Result_t1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Result_t2DataTable : global::System.Data.TypedTableBase<Result_t2Row> {
            
            private global::System.Data.DataColumn columnStaName2;
            
            private global::System.Data.DataColumn columnSumBox2;
            
            private global::System.Data.DataColumn columnSumWeight2;
            
            private global::System.Data.DataColumn columnAveWeight2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t2DataTable() {
                this.TableName = "Result_t2";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Result_t2DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Result_t2DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaName2Column {
                get {
                    return this.columnStaName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumBox2Column {
                get {
                    return this.columnSumBox2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumWeight2Column {
                get {
                    return this.columnSumWeight2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AveWeight2Column {
                get {
                    return this.columnAveWeight2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t2Row this[int index] {
                get {
                    return ((Result_t2Row)(this.Rows[index]));
                }
            }
            
            public event Result_t2RowChangeEventHandler Result_t2RowChanging;
            
            public event Result_t2RowChangeEventHandler Result_t2RowChanged;
            
            public event Result_t2RowChangeEventHandler Result_t2RowDeleting;
            
            public event Result_t2RowChangeEventHandler Result_t2RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddResult_t2Row(Result_t2Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t2Row AddResult_t2Row(string StaName2, int SumBox2, double SumWeight2, double AveWeight2) {
                Result_t2Row rowResult_t2Row = ((Result_t2Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaName2,
                        SumBox2,
                        SumWeight2,
                        AveWeight2};
                rowResult_t2Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowResult_t2Row);
                return rowResult_t2Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Result_t2DataTable cln = ((Result_t2DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Result_t2DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaName2 = base.Columns["StaName2"];
                this.columnSumBox2 = base.Columns["SumBox2"];
                this.columnSumWeight2 = base.Columns["SumWeight2"];
                this.columnAveWeight2 = base.Columns["AveWeight2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaName2 = new global::System.Data.DataColumn("StaName2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaName2);
                this.columnSumBox2 = new global::System.Data.DataColumn("SumBox2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumBox2);
                this.columnSumWeight2 = new global::System.Data.DataColumn("SumWeight2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumWeight2);
                this.columnAveWeight2 = new global::System.Data.DataColumn("AveWeight2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveWeight2);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t2Row NewResult_t2Row() {
                return ((Result_t2Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Result_t2Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Result_t2Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Result_t2RowChanged != null)) {
                    this.Result_t2RowChanged(this, new Result_t2RowChangeEvent(((Result_t2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Result_t2RowChanging != null)) {
                    this.Result_t2RowChanging(this, new Result_t2RowChangeEvent(((Result_t2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Result_t2RowDeleted != null)) {
                    this.Result_t2RowDeleted(this, new Result_t2RowChangeEvent(((Result_t2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Result_t2RowDeleting != null)) {
                    this.Result_t2RowDeleting(this, new Result_t2RowChangeEvent(((Result_t2Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveResult_t2Row(Result_t2Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Result_t2DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Result_t3DataTable : global::System.Data.TypedTableBase<Result_t3Row> {
            
            private global::System.Data.DataColumn columnStaName3;
            
            private global::System.Data.DataColumn columnSumBox3;
            
            private global::System.Data.DataColumn columnSumWeight3;
            
            private global::System.Data.DataColumn columnAveWeight3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t3DataTable() {
                this.TableName = "Result_t3";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Result_t3DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Result_t3DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaName3Column {
                get {
                    return this.columnStaName3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumBox3Column {
                get {
                    return this.columnSumBox3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumWeight3Column {
                get {
                    return this.columnSumWeight3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AveWeight3Column {
                get {
                    return this.columnAveWeight3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t3Row this[int index] {
                get {
                    return ((Result_t3Row)(this.Rows[index]));
                }
            }
            
            public event Result_t3RowChangeEventHandler Result_t3RowChanging;
            
            public event Result_t3RowChangeEventHandler Result_t3RowChanged;
            
            public event Result_t3RowChangeEventHandler Result_t3RowDeleting;
            
            public event Result_t3RowChangeEventHandler Result_t3RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddResult_t3Row(Result_t3Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t3Row AddResult_t3Row(string StaName3, int SumBox3, double SumWeight3, double AveWeight3) {
                Result_t3Row rowResult_t3Row = ((Result_t3Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaName3,
                        SumBox3,
                        SumWeight3,
                        AveWeight3};
                rowResult_t3Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowResult_t3Row);
                return rowResult_t3Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Result_t3DataTable cln = ((Result_t3DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Result_t3DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaName3 = base.Columns["StaName3"];
                this.columnSumBox3 = base.Columns["SumBox3"];
                this.columnSumWeight3 = base.Columns["SumWeight3"];
                this.columnAveWeight3 = base.Columns["AveWeight3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaName3 = new global::System.Data.DataColumn("StaName3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaName3);
                this.columnSumBox3 = new global::System.Data.DataColumn("SumBox3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumBox3);
                this.columnSumWeight3 = new global::System.Data.DataColumn("SumWeight3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumWeight3);
                this.columnAveWeight3 = new global::System.Data.DataColumn("AveWeight3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveWeight3);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t3Row NewResult_t3Row() {
                return ((Result_t3Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Result_t3Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Result_t3Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Result_t3RowChanged != null)) {
                    this.Result_t3RowChanged(this, new Result_t3RowChangeEvent(((Result_t3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Result_t3RowChanging != null)) {
                    this.Result_t3RowChanging(this, new Result_t3RowChangeEvent(((Result_t3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Result_t3RowDeleted != null)) {
                    this.Result_t3RowDeleted(this, new Result_t3RowChangeEvent(((Result_t3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Result_t3RowDeleting != null)) {
                    this.Result_t3RowDeleting(this, new Result_t3RowChangeEvent(((Result_t3Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveResult_t3Row(Result_t3Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Result_t3DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Temp_ResultDataTable : global::System.Data.TypedTableBase<Temp_ResultRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnStationID;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Temp_ResultDataTable() {
                this.TableName = "Temp_Result";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Temp_ResultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Temp_ResultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationIDColumn {
                get {
                    return this.columnStationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn {
                get {
                    return this.columnClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Temp_ResultRow this[int index] {
                get {
                    return ((Temp_ResultRow)(this.Rows[index]));
                }
            }
            
            public event Temp_ResultRowChangeEventHandler Temp_ResultRowChanging;
            
            public event Temp_ResultRowChangeEventHandler Temp_ResultRowChanged;
            
            public event Temp_ResultRowChangeEventHandler Temp_ResultRowDeleting;
            
            public event Temp_ResultRowChangeEventHandler Temp_ResultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTemp_ResultRow(Temp_ResultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Temp_ResultRow AddTemp_ResultRow(string ID, string StationID, string Name, string Class) {
                Temp_ResultRow rowTemp_ResultRow = ((Temp_ResultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        StationID,
                        Name,
                        Class};
                rowTemp_ResultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTemp_ResultRow);
                return rowTemp_ResultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Temp_ResultDataTable cln = ((Temp_ResultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Temp_ResultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnStationID = base.Columns["StationID"];
                this.columnName = base.Columns["Name"];
                this.columnClass = base.Columns["Class"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnStationID = new global::System.Data.DataColumn("StationID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationID);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Temp_ResultKey1", new global::System.Data.DataColumn[] {
                                this.columnID}, false));
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Temp_ResultRow NewTemp_ResultRow() {
                return ((Temp_ResultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Temp_ResultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Temp_ResultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Temp_ResultRowChanged != null)) {
                    this.Temp_ResultRowChanged(this, new Temp_ResultRowChangeEvent(((Temp_ResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Temp_ResultRowChanging != null)) {
                    this.Temp_ResultRowChanging(this, new Temp_ResultRowChangeEvent(((Temp_ResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Temp_ResultRowDeleted != null)) {
                    this.Temp_ResultRowDeleted(this, new Temp_ResultRowChangeEvent(((Temp_ResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Temp_ResultRowDeleting != null)) {
                    this.Temp_ResultRowDeleting(this, new Temp_ResultRowChangeEvent(((Temp_ResultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTemp_ResultRow(Temp_ResultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Temp_ResultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Result_t0DataTable : global::System.Data.TypedTableBase<Result_t0Row> {
            
            private global::System.Data.DataColumn columnStaName0;
            
            private global::System.Data.DataColumn columnSumBox10;
            
            private global::System.Data.DataColumn columnSumWeight0;
            
            private global::System.Data.DataColumn columnAveWeight0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t0DataTable() {
                this.TableName = "Result_t0";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Result_t0DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Result_t0DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaName0Column {
                get {
                    return this.columnStaName0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumBox10Column {
                get {
                    return this.columnSumBox10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumWeight0Column {
                get {
                    return this.columnSumWeight0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AveWeight0Column {
                get {
                    return this.columnAveWeight0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t0Row this[int index] {
                get {
                    return ((Result_t0Row)(this.Rows[index]));
                }
            }
            
            public event Result_t0RowChangeEventHandler Result_t0RowChanging;
            
            public event Result_t0RowChangeEventHandler Result_t0RowChanged;
            
            public event Result_t0RowChangeEventHandler Result_t0RowDeleting;
            
            public event Result_t0RowChangeEventHandler Result_t0RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddResult_t0Row(Result_t0Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t0Row AddResult_t0Row(string StaName0, int SumBox10, double SumWeight0, double AveWeight0) {
                Result_t0Row rowResult_t0Row = ((Result_t0Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaName0,
                        SumBox10,
                        SumWeight0,
                        AveWeight0};
                rowResult_t0Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowResult_t0Row);
                return rowResult_t0Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Result_t0DataTable cln = ((Result_t0DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Result_t0DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaName0 = base.Columns["StaName0"];
                this.columnSumBox10 = base.Columns["SumBox10"];
                this.columnSumWeight0 = base.Columns["SumWeight0"];
                this.columnAveWeight0 = base.Columns["AveWeight0"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaName0 = new global::System.Data.DataColumn("StaName0", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaName0);
                this.columnSumBox10 = new global::System.Data.DataColumn("SumBox10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumBox10);
                this.columnSumWeight0 = new global::System.Data.DataColumn("SumWeight0", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumWeight0);
                this.columnAveWeight0 = new global::System.Data.DataColumn("AveWeight0", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAveWeight0);
                this.columnStaName0.Caption = "StaName1";
                this.columnSumBox10.Caption = "SumBox1";
                this.columnSumWeight0.Caption = "SumWeight1";
                this.columnAveWeight0.Caption = "AveWeight1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t0Row NewResult_t0Row() {
                return ((Result_t0Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Result_t0Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Result_t0Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Result_t0RowChanged != null)) {
                    this.Result_t0RowChanged(this, new Result_t0RowChangeEvent(((Result_t0Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Result_t0RowChanging != null)) {
                    this.Result_t0RowChanging(this, new Result_t0RowChangeEvent(((Result_t0Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Result_t0RowDeleted != null)) {
                    this.Result_t0RowDeleted(this, new Result_t0RowChangeEvent(((Result_t0Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Result_t0RowDeleting != null)) {
                    this.Result_t0RowDeleting(this, new Result_t0RowChangeEvent(((Result_t0Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveResult_t0Row(Result_t0Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Result_t0DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MonCheCiDataTable : global::System.Data.TypedTableBase<MonCheCiRow> {
            
            private global::System.Data.DataColumn columnStaName;
            
            private global::System.Data.DataColumn columnDataColumn1;
            
            private global::System.Data.DataColumn columnDataColumn2;
            
            private global::System.Data.DataColumn columnDataColumn3;
            
            private global::System.Data.DataColumn columnDataColumn4;
            
            private global::System.Data.DataColumn columnDataColumn5;
            
            private global::System.Data.DataColumn columnDataColumn6;
            
            private global::System.Data.DataColumn columnDataColumn7;
            
            private global::System.Data.DataColumn columnDataColumn8;
            
            private global::System.Data.DataColumn columnDataColumn9;
            
            private global::System.Data.DataColumn columnDataColumn10;
            
            private global::System.Data.DataColumn columnDataColumn11;
            
            private global::System.Data.DataColumn columnDataColumn12;
            
            private global::System.Data.DataColumn columnDataColumn13;
            
            private global::System.Data.DataColumn columnDataColumn14;
            
            private global::System.Data.DataColumn columnDataColumn15;
            
            private global::System.Data.DataColumn columnDataColumn16;
            
            private global::System.Data.DataColumn columnDataColumn17;
            
            private global::System.Data.DataColumn columnDataColumn18;
            
            private global::System.Data.DataColumn columnDataColumn19;
            
            private global::System.Data.DataColumn columnDataColumn20;
            
            private global::System.Data.DataColumn columnDataColumn21;
            
            private global::System.Data.DataColumn columnDataColumn22;
            
            private global::System.Data.DataColumn columnDataColumn23;
            
            private global::System.Data.DataColumn columnDataColumn24;
            
            private global::System.Data.DataColumn columnDataColumn25;
            
            private global::System.Data.DataColumn columnDataColumn26;
            
            private global::System.Data.DataColumn columnDataColumn27;
            
            private global::System.Data.DataColumn columnDataColumn28;
            
            private global::System.Data.DataColumn columnDataColumn29;
            
            private global::System.Data.DataColumn columnDataColumn30;
            
            private global::System.Data.DataColumn columnDataColumn31;
            
            private global::System.Data.DataColumn columnSumCheCi;
            
            private global::System.Data.DataColumn columnSumReal;
            
            private global::System.Data.DataColumn columnDiff;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonCheCiDataTable() {
                this.TableName = "MonCheCi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MonCheCiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MonCheCiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StaNameColumn {
                get {
                    return this.columnStaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn1Column {
                get {
                    return this.columnDataColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn2Column {
                get {
                    return this.columnDataColumn2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn3Column {
                get {
                    return this.columnDataColumn3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn4Column {
                get {
                    return this.columnDataColumn4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn5Column {
                get {
                    return this.columnDataColumn5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn6Column {
                get {
                    return this.columnDataColumn6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn7Column {
                get {
                    return this.columnDataColumn7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn8Column {
                get {
                    return this.columnDataColumn8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn9Column {
                get {
                    return this.columnDataColumn9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn10Column {
                get {
                    return this.columnDataColumn10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn11Column {
                get {
                    return this.columnDataColumn11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn12Column {
                get {
                    return this.columnDataColumn12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn13Column {
                get {
                    return this.columnDataColumn13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn14Column {
                get {
                    return this.columnDataColumn14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn15Column {
                get {
                    return this.columnDataColumn15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn16Column {
                get {
                    return this.columnDataColumn16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn17Column {
                get {
                    return this.columnDataColumn17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn18Column {
                get {
                    return this.columnDataColumn18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn19Column {
                get {
                    return this.columnDataColumn19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn20Column {
                get {
                    return this.columnDataColumn20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn21Column {
                get {
                    return this.columnDataColumn21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn22Column {
                get {
                    return this.columnDataColumn22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn23Column {
                get {
                    return this.columnDataColumn23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn24Column {
                get {
                    return this.columnDataColumn24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn25Column {
                get {
                    return this.columnDataColumn25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn26Column {
                get {
                    return this.columnDataColumn26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn27Column {
                get {
                    return this.columnDataColumn27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn28Column {
                get {
                    return this.columnDataColumn28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn29Column {
                get {
                    return this.columnDataColumn29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn30Column {
                get {
                    return this.columnDataColumn30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataColumn31Column {
                get {
                    return this.columnDataColumn31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumCheCiColumn {
                get {
                    return this.columnSumCheCi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumRealColumn {
                get {
                    return this.columnSumReal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiffColumn {
                get {
                    return this.columnDiff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonCheCiRow this[int index] {
                get {
                    return ((MonCheCiRow)(this.Rows[index]));
                }
            }
            
            public event MonCheCiRowChangeEventHandler MonCheCiRowChanging;
            
            public event MonCheCiRowChangeEventHandler MonCheCiRowChanged;
            
            public event MonCheCiRowChangeEventHandler MonCheCiRowDeleting;
            
            public event MonCheCiRowChangeEventHandler MonCheCiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMonCheCiRow(MonCheCiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonCheCiRow AddMonCheCiRow(
                        string StaName, 
                        string DataColumn1, 
                        string DataColumn2, 
                        string DataColumn3, 
                        string DataColumn4, 
                        string DataColumn5, 
                        string DataColumn6, 
                        string DataColumn7, 
                        string DataColumn8, 
                        string DataColumn9, 
                        string DataColumn10, 
                        string DataColumn11, 
                        string DataColumn12, 
                        string DataColumn13, 
                        string DataColumn14, 
                        string DataColumn15, 
                        string DataColumn16, 
                        string DataColumn17, 
                        string DataColumn18, 
                        string DataColumn19, 
                        string DataColumn20, 
                        string DataColumn21, 
                        string DataColumn22, 
                        string DataColumn23, 
                        string DataColumn24, 
                        string DataColumn25, 
                        string DataColumn26, 
                        string DataColumn27, 
                        string DataColumn28, 
                        string DataColumn29, 
                        string DataColumn30, 
                        string DataColumn31, 
                        string SumCheCi, 
                        string SumReal, 
                        string Diff) {
                MonCheCiRow rowMonCheCiRow = ((MonCheCiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StaName,
                        DataColumn1,
                        DataColumn2,
                        DataColumn3,
                        DataColumn4,
                        DataColumn5,
                        DataColumn6,
                        DataColumn7,
                        DataColumn8,
                        DataColumn9,
                        DataColumn10,
                        DataColumn11,
                        DataColumn12,
                        DataColumn13,
                        DataColumn14,
                        DataColumn15,
                        DataColumn16,
                        DataColumn17,
                        DataColumn18,
                        DataColumn19,
                        DataColumn20,
                        DataColumn21,
                        DataColumn22,
                        DataColumn23,
                        DataColumn24,
                        DataColumn25,
                        DataColumn26,
                        DataColumn27,
                        DataColumn28,
                        DataColumn29,
                        DataColumn30,
                        DataColumn31,
                        SumCheCi,
                        SumReal,
                        Diff};
                rowMonCheCiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMonCheCiRow);
                return rowMonCheCiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MonCheCiDataTable cln = ((MonCheCiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MonCheCiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStaName = base.Columns["StaName"];
                this.columnDataColumn1 = base.Columns["DataColumn1"];
                this.columnDataColumn2 = base.Columns["DataColumn2"];
                this.columnDataColumn3 = base.Columns["DataColumn3"];
                this.columnDataColumn4 = base.Columns["DataColumn4"];
                this.columnDataColumn5 = base.Columns["DataColumn5"];
                this.columnDataColumn6 = base.Columns["DataColumn6"];
                this.columnDataColumn7 = base.Columns["DataColumn7"];
                this.columnDataColumn8 = base.Columns["DataColumn8"];
                this.columnDataColumn9 = base.Columns["DataColumn9"];
                this.columnDataColumn10 = base.Columns["DataColumn10"];
                this.columnDataColumn11 = base.Columns["DataColumn11"];
                this.columnDataColumn12 = base.Columns["DataColumn12"];
                this.columnDataColumn13 = base.Columns["DataColumn13"];
                this.columnDataColumn14 = base.Columns["DataColumn14"];
                this.columnDataColumn15 = base.Columns["DataColumn15"];
                this.columnDataColumn16 = base.Columns["DataColumn16"];
                this.columnDataColumn17 = base.Columns["DataColumn17"];
                this.columnDataColumn18 = base.Columns["DataColumn18"];
                this.columnDataColumn19 = base.Columns["DataColumn19"];
                this.columnDataColumn20 = base.Columns["DataColumn20"];
                this.columnDataColumn21 = base.Columns["DataColumn21"];
                this.columnDataColumn22 = base.Columns["DataColumn22"];
                this.columnDataColumn23 = base.Columns["DataColumn23"];
                this.columnDataColumn24 = base.Columns["DataColumn24"];
                this.columnDataColumn25 = base.Columns["DataColumn25"];
                this.columnDataColumn26 = base.Columns["DataColumn26"];
                this.columnDataColumn27 = base.Columns["DataColumn27"];
                this.columnDataColumn28 = base.Columns["DataColumn28"];
                this.columnDataColumn29 = base.Columns["DataColumn29"];
                this.columnDataColumn30 = base.Columns["DataColumn30"];
                this.columnDataColumn31 = base.Columns["DataColumn31"];
                this.columnSumCheCi = base.Columns["SumCheCi"];
                this.columnSumReal = base.Columns["SumReal"];
                this.columnDiff = base.Columns["Diff"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStaName = new global::System.Data.DataColumn("StaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaName);
                this.columnDataColumn1 = new global::System.Data.DataColumn("DataColumn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn1);
                this.columnDataColumn2 = new global::System.Data.DataColumn("DataColumn2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn2);
                this.columnDataColumn3 = new global::System.Data.DataColumn("DataColumn3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn3);
                this.columnDataColumn4 = new global::System.Data.DataColumn("DataColumn4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn4);
                this.columnDataColumn5 = new global::System.Data.DataColumn("DataColumn5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn5);
                this.columnDataColumn6 = new global::System.Data.DataColumn("DataColumn6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn6);
                this.columnDataColumn7 = new global::System.Data.DataColumn("DataColumn7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn7);
                this.columnDataColumn8 = new global::System.Data.DataColumn("DataColumn8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn8);
                this.columnDataColumn9 = new global::System.Data.DataColumn("DataColumn9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn9);
                this.columnDataColumn10 = new global::System.Data.DataColumn("DataColumn10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn10);
                this.columnDataColumn11 = new global::System.Data.DataColumn("DataColumn11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn11);
                this.columnDataColumn12 = new global::System.Data.DataColumn("DataColumn12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn12);
                this.columnDataColumn13 = new global::System.Data.DataColumn("DataColumn13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn13);
                this.columnDataColumn14 = new global::System.Data.DataColumn("DataColumn14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn14);
                this.columnDataColumn15 = new global::System.Data.DataColumn("DataColumn15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn15);
                this.columnDataColumn16 = new global::System.Data.DataColumn("DataColumn16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn16);
                this.columnDataColumn17 = new global::System.Data.DataColumn("DataColumn17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn17);
                this.columnDataColumn18 = new global::System.Data.DataColumn("DataColumn18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn18);
                this.columnDataColumn19 = new global::System.Data.DataColumn("DataColumn19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn19);
                this.columnDataColumn20 = new global::System.Data.DataColumn("DataColumn20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn20);
                this.columnDataColumn21 = new global::System.Data.DataColumn("DataColumn21", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn21);
                this.columnDataColumn22 = new global::System.Data.DataColumn("DataColumn22", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn22);
                this.columnDataColumn23 = new global::System.Data.DataColumn("DataColumn23", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn23);
                this.columnDataColumn24 = new global::System.Data.DataColumn("DataColumn24", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn24);
                this.columnDataColumn25 = new global::System.Data.DataColumn("DataColumn25", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn25);
                this.columnDataColumn26 = new global::System.Data.DataColumn("DataColumn26", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn26);
                this.columnDataColumn27 = new global::System.Data.DataColumn("DataColumn27", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn27);
                this.columnDataColumn28 = new global::System.Data.DataColumn("DataColumn28", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn28);
                this.columnDataColumn29 = new global::System.Data.DataColumn("DataColumn29", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn29);
                this.columnDataColumn30 = new global::System.Data.DataColumn("DataColumn30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn30);
                this.columnDataColumn31 = new global::System.Data.DataColumn("DataColumn31", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn31);
                this.columnSumCheCi = new global::System.Data.DataColumn("SumCheCi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumCheCi);
                this.columnSumReal = new global::System.Data.DataColumn("SumReal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumReal);
                this.columnDiff = new global::System.Data.DataColumn("Diff", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiff);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonCheCiRow NewMonCheCiRow() {
                return ((MonCheCiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MonCheCiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MonCheCiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MonCheCiRowChanged != null)) {
                    this.MonCheCiRowChanged(this, new MonCheCiRowChangeEvent(((MonCheCiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MonCheCiRowChanging != null)) {
                    this.MonCheCiRowChanging(this, new MonCheCiRowChangeEvent(((MonCheCiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MonCheCiRowDeleted != null)) {
                    this.MonCheCiRowDeleted(this, new MonCheCiRowChangeEvent(((MonCheCiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MonCheCiRowDeleting != null)) {
                    this.MonCheCiRowDeleting(this, new MonCheCiRowChangeEvent(((MonCheCiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMonCheCiRow(MonCheCiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MonCheCiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Station_TableRow : global::System.Data.DataRow {
            
            private Station_TableDataTable tableStation_Table;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Station_TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStation_Table = ((Station_TableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableStation_Table.IDColumn]));
                }
                set {
                    this[this.tableStation_Table.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StationID {
                get {
                    try {
                        return ((int)(this[this.tableStation_Table.StationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Station_Table”中列“StationID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStation_Table.StationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableStation_Table.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Station_Table”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStation_Table.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Class {
                get {
                    try {
                        return ((int)(this[this.tableStation_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Station_Table”中列“Class”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableStation_Table.ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStationIDNull() {
                return this.IsNull(this.tableStation_Table.StationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStationIDNull() {
                this[this.tableStation_Table.StationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableStation_Table.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableStation_Table.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull() {
                return this.IsNull(this.tableStation_Table.ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull() {
                this[this.tableStation_Table.ClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Goods_TableRow[] GetGoods_TableRows() {
                if ((this.Table.ChildRelations["Station_Table_Goods_Table"] == null)) {
                    return new Goods_TableRow[0];
                }
                else {
                    return ((Goods_TableRow[])(base.GetChildRows(this.Table.ChildRelations["Station_Table_Goods_Table"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Goods_TableRow : global::System.Data.DataRow {
            
            private Goods_TableDataTable tableGoods_Table;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Goods_TableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGoods_Table = ((Goods_TableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableGoods_Table.IDColumn]));
                }
                set {
                    this[this.tableGoods_Table.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BoxCardID {
                get {
                    try {
                        return ((string)(this[this.tableGoods_Table.BoxCardIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Goods_Table”中列“BoxCardID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGoods_Table.BoxCardIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TruckNo {
                get {
                    try {
                        return ((string)(this[this.tableGoods_Table.TruckNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Goods_Table”中列“TruckNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGoods_Table.TruckNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartTime {
                get {
                    try {
                        return ((string)(this[this.tableGoods_Table.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Goods_Table”中列“StartTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGoods_Table.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableGoods_Table.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Goods_Table”中列“EndTime”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGoods_Table.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int State {
                get {
                    try {
                        return ((int)(this[this.tableGoods_Table.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Goods_Table”中列“State”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGoods_Table.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight {
                get {
                    try {
                        return ((double)(this[this.tableGoods_Table.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Goods_Table”中列“Weight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGoods_Table.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StartStationID {
                get {
                    try {
                        return ((int)(this[this.tableGoods_Table.StartStationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Goods_Table”中列“StartStationID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGoods_Table.StartStationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int EndStationID {
                get {
                    try {
                        return ((int)(this[this.tableGoods_Table.EndStationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Goods_Table”中列“EndStationID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGoods_Table.EndStationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Station_TableRow Station_TableRow {
                get {
                    return ((Station_TableRow)(this.GetParentRow(this.Table.ParentRelations["Station_Table_Goods_Table"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["Station_Table_Goods_Table"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBoxCardIDNull() {
                return this.IsNull(this.tableGoods_Table.BoxCardIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBoxCardIDNull() {
                this[this.tableGoods_Table.BoxCardIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTruckNoNull() {
                return this.IsNull(this.tableGoods_Table.TruckNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTruckNoNull() {
                this[this.tableGoods_Table.TruckNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableGoods_Table.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableGoods_Table.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableGoods_Table.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableGoods_Table.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableGoods_Table.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableGoods_Table.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableGoods_Table.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableGoods_Table.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartStationIDNull() {
                return this.IsNull(this.tableGoods_Table.StartStationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartStationIDNull() {
                this[this.tableGoods_Table.StartStationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndStationIDNull() {
                return this.IsNull(this.tableGoods_Table.EndStationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndStationIDNull() {
                this[this.tableGoods_Table.EndStationIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ResultRow : global::System.Data.DataRow {
            
            private ResultDataTable tableResult;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableResult = ((ResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaName {
                get {
                    try {
                        return ((string)(this[this.tableResult.StaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“StaName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.StaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SumBox {
                get {
                    try {
                        return ((int)(this[this.tableResult.SumBoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“SumBox”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.SumBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_2 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_3 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_4 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_5 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_6 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_7 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Weight_8 {
                get {
                    try {
                        return ((decimal)(this[this.tableResult.Weight_8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_9 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_10 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_11 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_11”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_12 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_12”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_13 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_13”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_14 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_14”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Weight_15 {
                get {
                    try {
                        return ((double)(this[this.tableResult.Weight_15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“Weight_15”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.Weight_15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumWeight {
                get {
                    try {
                        return ((double)(this[this.tableResult.SumWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“SumWeight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.SumWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SumBoxTail {
                get {
                    try {
                        return ((int)(this[this.tableResult.SumBoxTailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“SumBoxTail”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.SumBoxTailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateID {
                get {
                    try {
                        return ((string)(this[this.tableResult.DateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result”中列“DateID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult.DateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MyDateRow MyDateRow {
                get {
                    return ((MyDateRow)(this.GetParentRow(this.Table.ParentRelations["MyDate_Result"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MyDate_Result"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStaNameNull() {
                return this.IsNull(this.tableResult.StaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStaNameNull() {
                this[this.tableResult.StaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumBoxNull() {
                return this.IsNull(this.tableResult.SumBoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumBoxNull() {
                this[this.tableResult.SumBoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_2Null() {
                return this.IsNull(this.tableResult.Weight_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_2Null() {
                this[this.tableResult.Weight_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_3Null() {
                return this.IsNull(this.tableResult.Weight_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_3Null() {
                this[this.tableResult.Weight_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_4Null() {
                return this.IsNull(this.tableResult.Weight_4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_4Null() {
                this[this.tableResult.Weight_4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_5Null() {
                return this.IsNull(this.tableResult.Weight_5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_5Null() {
                this[this.tableResult.Weight_5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_6Null() {
                return this.IsNull(this.tableResult.Weight_6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_6Null() {
                this[this.tableResult.Weight_6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_7Null() {
                return this.IsNull(this.tableResult.Weight_7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_7Null() {
                this[this.tableResult.Weight_7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_8Null() {
                return this.IsNull(this.tableResult.Weight_8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_8Null() {
                this[this.tableResult.Weight_8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_9Null() {
                return this.IsNull(this.tableResult.Weight_9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_9Null() {
                this[this.tableResult.Weight_9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_10Null() {
                return this.IsNull(this.tableResult.Weight_10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_10Null() {
                this[this.tableResult.Weight_10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_11Null() {
                return this.IsNull(this.tableResult.Weight_11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_11Null() {
                this[this.tableResult.Weight_11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_12Null() {
                return this.IsNull(this.tableResult.Weight_12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_12Null() {
                this[this.tableResult.Weight_12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_13Null() {
                return this.IsNull(this.tableResult.Weight_13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_13Null() {
                this[this.tableResult.Weight_13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_14Null() {
                return this.IsNull(this.tableResult.Weight_14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_14Null() {
                this[this.tableResult.Weight_14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeight_15Null() {
                return this.IsNull(this.tableResult.Weight_15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeight_15Null() {
                this[this.tableResult.Weight_15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumWeightNull() {
                return this.IsNull(this.tableResult.SumWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumWeightNull() {
                this[this.tableResult.SumWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumBoxTailNull() {
                return this.IsNull(this.tableResult.SumBoxTailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumBoxTailNull() {
                this[this.tableResult.SumBoxTailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateIDNull() {
                return this.IsNull(this.tableResult.DateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateIDNull() {
                this[this.tableResult.DateIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MyDateRow : global::System.Data.DataRow {
            
            private MyDateDataTable tableMyDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MyDateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMyDate = ((MyDateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Year {
                get {
                    try {
                        return ((string)(this[this.tableMyDate.YearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MyDate”中列“Year”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMyDate.YearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Month {
                get {
                    try {
                        return ((string)(this[this.tableMyDate.MonthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MyDate”中列“Month”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMyDate.MonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day {
                get {
                    try {
                        return ((string)(this[this.tableMyDate.DayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MyDate”中列“Day”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMyDate.DayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DateID {
                get {
                    try {
                        return ((string)(this[this.tableMyDate.DateIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MyDate”中列“DateID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMyDate.DateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TotalBox {
                get {
                    try {
                        return ((int)(this[this.tableMyDate.TotalBoxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MyDate”中列“TotalBox”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMyDate.TotalBoxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TotalWeight {
                get {
                    try {
                        return ((double)(this[this.tableMyDate.TotalWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MyDate”中列“TotalWeight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMyDate.TotalWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYearNull() {
                return this.IsNull(this.tableMyDate.YearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYearNull() {
                this[this.tableMyDate.YearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMonthNull() {
                return this.IsNull(this.tableMyDate.MonthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMonthNull() {
                this[this.tableMyDate.MonthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDayNull() {
                return this.IsNull(this.tableMyDate.DayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDayNull() {
                this[this.tableMyDate.DayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateIDNull() {
                return this.IsNull(this.tableMyDate.DateIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateIDNull() {
                this[this.tableMyDate.DateIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalBoxNull() {
                return this.IsNull(this.tableMyDate.TotalBoxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalBoxNull() {
                this[this.tableMyDate.TotalBoxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalWeightNull() {
                return this.IsNull(this.tableMyDate.TotalWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalWeightNull() {
                this[this.tableMyDate.TotalWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultRow[] GetResultRows() {
                if ((this.Table.ChildRelations["MyDate_Result"] == null)) {
                    return new ResultRow[0];
                }
                else {
                    return ((ResultRow[])(base.GetChildRows(this.Table.ChildRelations["MyDate_Result"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Result_t1Row : global::System.Data.DataRow {
            
            private Result_t1DataTable tableResult_t1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Result_t1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableResult_t1 = ((Result_t1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaName1 {
                get {
                    try {
                        return ((string)(this[this.tableResult_t1.StaName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t1”中列“StaName1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t1.StaName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SumBox1 {
                get {
                    try {
                        return ((int)(this[this.tableResult_t1.SumBox1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t1”中列“SumBox1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t1.SumBox1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumWeight1 {
                get {
                    try {
                        return ((double)(this[this.tableResult_t1.SumWeight1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t1”中列“SumWeight1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t1.SumWeight1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AveWeight1 {
                get {
                    try {
                        return ((double)(this[this.tableResult_t1.AveWeight1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t1”中列“AveWeight1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t1.AveWeight1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStaName1Null() {
                return this.IsNull(this.tableResult_t1.StaName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStaName1Null() {
                this[this.tableResult_t1.StaName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumBox1Null() {
                return this.IsNull(this.tableResult_t1.SumBox1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumBox1Null() {
                this[this.tableResult_t1.SumBox1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumWeight1Null() {
                return this.IsNull(this.tableResult_t1.SumWeight1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumWeight1Null() {
                this[this.tableResult_t1.SumWeight1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAveWeight1Null() {
                return this.IsNull(this.tableResult_t1.AveWeight1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAveWeight1Null() {
                this[this.tableResult_t1.AveWeight1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Result_t2Row : global::System.Data.DataRow {
            
            private Result_t2DataTable tableResult_t2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Result_t2Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableResult_t2 = ((Result_t2DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaName2 {
                get {
                    try {
                        return ((string)(this[this.tableResult_t2.StaName2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t2”中列“StaName2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t2.StaName2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SumBox2 {
                get {
                    try {
                        return ((int)(this[this.tableResult_t2.SumBox2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t2”中列“SumBox2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t2.SumBox2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumWeight2 {
                get {
                    try {
                        return ((double)(this[this.tableResult_t2.SumWeight2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t2”中列“SumWeight2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t2.SumWeight2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AveWeight2 {
                get {
                    try {
                        return ((double)(this[this.tableResult_t2.AveWeight2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t2”中列“AveWeight2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t2.AveWeight2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStaName2Null() {
                return this.IsNull(this.tableResult_t2.StaName2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStaName2Null() {
                this[this.tableResult_t2.StaName2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumBox2Null() {
                return this.IsNull(this.tableResult_t2.SumBox2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumBox2Null() {
                this[this.tableResult_t2.SumBox2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumWeight2Null() {
                return this.IsNull(this.tableResult_t2.SumWeight2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumWeight2Null() {
                this[this.tableResult_t2.SumWeight2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAveWeight2Null() {
                return this.IsNull(this.tableResult_t2.AveWeight2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAveWeight2Null() {
                this[this.tableResult_t2.AveWeight2Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Result_t3Row : global::System.Data.DataRow {
            
            private Result_t3DataTable tableResult_t3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Result_t3Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableResult_t3 = ((Result_t3DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaName3 {
                get {
                    try {
                        return ((string)(this[this.tableResult_t3.StaName3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t3”中列“StaName3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t3.StaName3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SumBox3 {
                get {
                    try {
                        return ((int)(this[this.tableResult_t3.SumBox3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t3”中列“SumBox3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t3.SumBox3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumWeight3 {
                get {
                    try {
                        return ((double)(this[this.tableResult_t3.SumWeight3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t3”中列“SumWeight3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t3.SumWeight3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AveWeight3 {
                get {
                    try {
                        return ((double)(this[this.tableResult_t3.AveWeight3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t3”中列“AveWeight3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t3.AveWeight3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStaName3Null() {
                return this.IsNull(this.tableResult_t3.StaName3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStaName3Null() {
                this[this.tableResult_t3.StaName3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumBox3Null() {
                return this.IsNull(this.tableResult_t3.SumBox3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumBox3Null() {
                this[this.tableResult_t3.SumBox3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumWeight3Null() {
                return this.IsNull(this.tableResult_t3.SumWeight3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumWeight3Null() {
                this[this.tableResult_t3.SumWeight3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAveWeight3Null() {
                return this.IsNull(this.tableResult_t3.AveWeight3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAveWeight3Null() {
                this[this.tableResult_t3.AveWeight3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Temp_ResultRow : global::System.Data.DataRow {
            
            private Temp_ResultDataTable tableTemp_Result;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Temp_ResultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTemp_Result = ((Temp_ResultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tableTemp_Result.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Temp_Result”中列“ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemp_Result.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StationID {
                get {
                    try {
                        return ((string)(this[this.tableTemp_Result.StationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Temp_Result”中列“StationID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemp_Result.StationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableTemp_Result.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Temp_Result”中列“Name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemp_Result.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class {
                get {
                    try {
                        return ((string)(this[this.tableTemp_Result.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Temp_Result”中列“Class”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTemp_Result.ClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableTemp_Result.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableTemp_Result.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStationIDNull() {
                return this.IsNull(this.tableTemp_Result.StationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStationIDNull() {
                this[this.tableTemp_Result.StationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableTemp_Result.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableTemp_Result.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull() {
                return this.IsNull(this.tableTemp_Result.ClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull() {
                this[this.tableTemp_Result.ClassColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Result_t0Row : global::System.Data.DataRow {
            
            private Result_t0DataTable tableResult_t0;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Result_t0Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableResult_t0 = ((Result_t0DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaName0 {
                get {
                    try {
                        return ((string)(this[this.tableResult_t0.StaName0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t0”中列“StaName0”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t0.StaName0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SumBox10 {
                get {
                    try {
                        return ((int)(this[this.tableResult_t0.SumBox10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t0”中列“SumBox10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t0.SumBox10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double SumWeight0 {
                get {
                    try {
                        return ((double)(this[this.tableResult_t0.SumWeight0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t0”中列“SumWeight0”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t0.SumWeight0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double AveWeight0 {
                get {
                    try {
                        return ((double)(this[this.tableResult_t0.AveWeight0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“Result_t0”中列“AveWeight0”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableResult_t0.AveWeight0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStaName0Null() {
                return this.IsNull(this.tableResult_t0.StaName0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStaName0Null() {
                this[this.tableResult_t0.StaName0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumBox10Null() {
                return this.IsNull(this.tableResult_t0.SumBox10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumBox10Null() {
                this[this.tableResult_t0.SumBox10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumWeight0Null() {
                return this.IsNull(this.tableResult_t0.SumWeight0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumWeight0Null() {
                this[this.tableResult_t0.SumWeight0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAveWeight0Null() {
                return this.IsNull(this.tableResult_t0.AveWeight0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAveWeight0Null() {
                this[this.tableResult_t0.AveWeight0Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MonCheCiRow : global::System.Data.DataRow {
            
            private MonCheCiDataTable tableMonCheCi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MonCheCiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMonCheCi = ((MonCheCiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StaName {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.StaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“StaName”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.StaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn1 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn2 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn3 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn4 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn5 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn6 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn7 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn8 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn9 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn10 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn11 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn11”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn12 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn12”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn13 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn13”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn14 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn14”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn15 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn15”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn16 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn16”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn17 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn17”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn18 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn18”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn19 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn19”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn20 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn20”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn21 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn21”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn22 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn22”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn23 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn23”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn24 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn24”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn25 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn25”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn26 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn26”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn27 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn27”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn28 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn28”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn29 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn29”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn30 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn30”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DataColumn31 {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DataColumn31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“DataColumn31”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DataColumn31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SumCheCi {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.SumCheCiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“SumCheCi”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.SumCheCiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SumReal {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.SumRealColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“SumReal”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.SumRealColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Diff {
                get {
                    try {
                        return ((string)(this[this.tableMonCheCi.DiffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“MonCheCi”中列“Diff”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableMonCheCi.DiffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStaNameNull() {
                return this.IsNull(this.tableMonCheCi.StaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStaNameNull() {
                this[this.tableMonCheCi.StaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn1Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn1Null() {
                this[this.tableMonCheCi.DataColumn1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn2Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn2Null() {
                this[this.tableMonCheCi.DataColumn2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn3Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn3Null() {
                this[this.tableMonCheCi.DataColumn3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn4Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn4Null() {
                this[this.tableMonCheCi.DataColumn4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn5Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn5Null() {
                this[this.tableMonCheCi.DataColumn5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn6Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn6Null() {
                this[this.tableMonCheCi.DataColumn6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn7Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn7Null() {
                this[this.tableMonCheCi.DataColumn7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn8Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn8Null() {
                this[this.tableMonCheCi.DataColumn8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn9Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn9Null() {
                this[this.tableMonCheCi.DataColumn9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn10Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn10Null() {
                this[this.tableMonCheCi.DataColumn10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn11Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn11Null() {
                this[this.tableMonCheCi.DataColumn11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn12Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn12Null() {
                this[this.tableMonCheCi.DataColumn12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn13Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn13Null() {
                this[this.tableMonCheCi.DataColumn13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn14Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn14Null() {
                this[this.tableMonCheCi.DataColumn14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn15Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn15Null() {
                this[this.tableMonCheCi.DataColumn15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn16Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn16Null() {
                this[this.tableMonCheCi.DataColumn16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn17Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn17Null() {
                this[this.tableMonCheCi.DataColumn17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn18Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn18Null() {
                this[this.tableMonCheCi.DataColumn18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn19Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn19Null() {
                this[this.tableMonCheCi.DataColumn19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn20Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn20Null() {
                this[this.tableMonCheCi.DataColumn20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn21Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn21Null() {
                this[this.tableMonCheCi.DataColumn21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn22Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn22Null() {
                this[this.tableMonCheCi.DataColumn22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn23Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn23Null() {
                this[this.tableMonCheCi.DataColumn23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn24Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn24Null() {
                this[this.tableMonCheCi.DataColumn24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn25Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn25Null() {
                this[this.tableMonCheCi.DataColumn25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn26Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn26Null() {
                this[this.tableMonCheCi.DataColumn26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn27Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn27Null() {
                this[this.tableMonCheCi.DataColumn27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn28Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn28Null() {
                this[this.tableMonCheCi.DataColumn28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn29Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn29Null() {
                this[this.tableMonCheCi.DataColumn29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn30Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn30Null() {
                this[this.tableMonCheCi.DataColumn30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataColumn31Null() {
                return this.IsNull(this.tableMonCheCi.DataColumn31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataColumn31Null() {
                this[this.tableMonCheCi.DataColumn31Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumCheCiNull() {
                return this.IsNull(this.tableMonCheCi.SumCheCiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumCheCiNull() {
                this[this.tableMonCheCi.SumCheCiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumRealNull() {
                return this.IsNull(this.tableMonCheCi.SumRealColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumRealNull() {
                this[this.tableMonCheCi.SumRealColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiffNull() {
                return this.IsNull(this.tableMonCheCi.DiffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiffNull() {
                this[this.tableMonCheCi.DiffColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Station_TableRowChangeEvent : global::System.EventArgs {
            
            private Station_TableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Station_TableRowChangeEvent(Station_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Station_TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Goods_TableRowChangeEvent : global::System.EventArgs {
            
            private Goods_TableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Goods_TableRowChangeEvent(Goods_TableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Goods_TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ResultRowChangeEvent : global::System.EventArgs {
            
            private ResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultRowChangeEvent(ResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MyDateRowChangeEvent : global::System.EventArgs {
            
            private MyDateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MyDateRowChangeEvent(MyDateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MyDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Result_t1RowChangeEvent : global::System.EventArgs {
            
            private Result_t1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t1RowChangeEvent(Result_t1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Result_t2RowChangeEvent : global::System.EventArgs {
            
            private Result_t2Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t2RowChangeEvent(Result_t2Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t2Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Result_t3RowChangeEvent : global::System.EventArgs {
            
            private Result_t3Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t3RowChangeEvent(Result_t3Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t3Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Temp_ResultRowChangeEvent : global::System.EventArgs {
            
            private Temp_ResultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Temp_ResultRowChangeEvent(Temp_ResultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Temp_ResultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Result_t0RowChangeEvent : global::System.EventArgs {
            
            private Result_t0Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t0RowChangeEvent(Result_t0Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Result_t0Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MonCheCiRowChangeEvent : global::System.EventArgs {
            
            private MonCheCiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonCheCiRowChangeEvent(MonCheCiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MonCheCiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591